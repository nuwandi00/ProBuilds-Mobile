// Generated by view binder compiler. Do not edit!
package com.example.kelineyt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.simplepass.loadingbutton.customViews.CircularProgressButton;
import com.example.kelineyt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UpdateHealthtipsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CircularProgressButton deleteTips3btnn;

  @NonNull
  public final EditText doctorNameedts;

  @NonNull
  public final CircularProgressButton edtTipsbtns;

  @NonNull
  public final EditText healthTipsedts;

  @NonNull
  public final ConstraintLayout healthtipDesedt;

  @NonNull
  public final TextView tipsEdtdelete;

  @NonNull
  public final ImageView tipsTop;

  @NonNull
  public final TextView updateSlogan;

  private UpdateHealthtipsBinding(@NonNull ConstraintLayout rootView,
      @NonNull CircularProgressButton deleteTips3btnn, @NonNull EditText doctorNameedts,
      @NonNull CircularProgressButton edtTipsbtns, @NonNull EditText healthTipsedts,
      @NonNull ConstraintLayout healthtipDesedt, @NonNull TextView tipsEdtdelete,
      @NonNull ImageView tipsTop, @NonNull TextView updateSlogan) {
    this.rootView = rootView;
    this.deleteTips3btnn = deleteTips3btnn;
    this.doctorNameedts = doctorNameedts;
    this.edtTipsbtns = edtTipsbtns;
    this.healthTipsedts = healthTipsedts;
    this.healthtipDesedt = healthtipDesedt;
    this.tipsEdtdelete = tipsEdtdelete;
    this.tipsTop = tipsTop;
    this.updateSlogan = updateSlogan;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UpdateHealthtipsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UpdateHealthtipsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.update_healthtips, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UpdateHealthtipsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete_tips3btnn;
      CircularProgressButton deleteTips3btnn = ViewBindings.findChildViewById(rootView, id);
      if (deleteTips3btnn == null) {
        break missingId;
      }

      id = R.id.doctor_Nameedts;
      EditText doctorNameedts = ViewBindings.findChildViewById(rootView, id);
      if (doctorNameedts == null) {
        break missingId;
      }

      id = R.id.edt_tipsbtns;
      CircularProgressButton edtTipsbtns = ViewBindings.findChildViewById(rootView, id);
      if (edtTipsbtns == null) {
        break missingId;
      }

      id = R.id.health_tipsedts;
      EditText healthTipsedts = ViewBindings.findChildViewById(rootView, id);
      if (healthTipsedts == null) {
        break missingId;
      }

      ConstraintLayout healthtipDesedt = (ConstraintLayout) rootView;

      id = R.id.tips_edtdelete;
      TextView tipsEdtdelete = ViewBindings.findChildViewById(rootView, id);
      if (tipsEdtdelete == null) {
        break missingId;
      }

      id = R.id.tips_top;
      ImageView tipsTop = ViewBindings.findChildViewById(rootView, id);
      if (tipsTop == null) {
        break missingId;
      }

      id = R.id.update_slogan;
      TextView updateSlogan = ViewBindings.findChildViewById(rootView, id);
      if (updateSlogan == null) {
        break missingId;
      }

      return new UpdateHealthtipsBinding((ConstraintLayout) rootView, deleteTips3btnn,
          doctorNameedts, edtTipsbtns, healthTipsedts, healthtipDesedt, tipsEdtdelete, tipsTop,
          updateSlogan);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
