// Generated by view binder compiler. Do not edit!
package com.example.kelineyt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kelineyt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListFrgamentfeedbackBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView fbName;

  @NonNull
  public final ImageView feedbacklist;

  @NonNull
  public final ImageView imageView8;

  @NonNull
  public final ImageView imageView9;

  @NonNull
  public final TextView namefd;

  private ListFrgamentfeedbackBinding(@NonNull ConstraintLayout rootView, @NonNull TextView fbName,
      @NonNull ImageView feedbacklist, @NonNull ImageView imageView8, @NonNull ImageView imageView9,
      @NonNull TextView namefd) {
    this.rootView = rootView;
    this.fbName = fbName;
    this.feedbacklist = feedbacklist;
    this.imageView8 = imageView8;
    this.imageView9 = imageView9;
    this.namefd = namefd;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListFrgamentfeedbackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListFrgamentfeedbackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_frgamentfeedback, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListFrgamentfeedbackBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fbName;
      TextView fbName = ViewBindings.findChildViewById(rootView, id);
      if (fbName == null) {
        break missingId;
      }

      id = R.id.feedbacklist;
      ImageView feedbacklist = ViewBindings.findChildViewById(rootView, id);
      if (feedbacklist == null) {
        break missingId;
      }

      id = R.id.imageView8;
      ImageView imageView8 = ViewBindings.findChildViewById(rootView, id);
      if (imageView8 == null) {
        break missingId;
      }

      id = R.id.imageView9;
      ImageView imageView9 = ViewBindings.findChildViewById(rootView, id);
      if (imageView9 == null) {
        break missingId;
      }

      id = R.id.namefd;
      TextView namefd = ViewBindings.findChildViewById(rootView, id);
      if (namefd == null) {
        break missingId;
      }

      return new ListFrgamentfeedbackBinding((ConstraintLayout) rootView, fbName, feedbacklist,
          imageView8, imageView9, namefd);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
