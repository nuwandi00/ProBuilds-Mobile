// Generated by view binder compiler. Do not edit!
package com.example.kelineyt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kelineyt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AvailableDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button adding;

  @NonNull
  public final ImageView imageView10;

  @NonNull
  public final ImageView imageView31;

  @NonNull
  public final ImageView imageView32;

  @NonNull
  public final Button rateUs;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView8;

  @NonNull
  public final TextView textViewnew;

  @NonNull
  public final Button viewAva;

  private AvailableDetailsBinding(@NonNull ConstraintLayout rootView, @NonNull Button adding,
      @NonNull ImageView imageView10, @NonNull ImageView imageView31,
      @NonNull ImageView imageView32, @NonNull Button rateUs, @NonNull TextView textView14,
      @NonNull TextView textView8, @NonNull TextView textViewnew, @NonNull Button viewAva) {
    this.rootView = rootView;
    this.adding = adding;
    this.imageView10 = imageView10;
    this.imageView31 = imageView31;
    this.imageView32 = imageView32;
    this.rateUs = rateUs;
    this.textView14 = textView14;
    this.textView8 = textView8;
    this.textViewnew = textViewnew;
    this.viewAva = viewAva;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AvailableDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AvailableDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.available_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AvailableDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adding;
      Button adding = ViewBindings.findChildViewById(rootView, id);
      if (adding == null) {
        break missingId;
      }

      id = R.id.imageView10;
      ImageView imageView10 = ViewBindings.findChildViewById(rootView, id);
      if (imageView10 == null) {
        break missingId;
      }

      id = R.id.imageView31;
      ImageView imageView31 = ViewBindings.findChildViewById(rootView, id);
      if (imageView31 == null) {
        break missingId;
      }

      id = R.id.imageView32;
      ImageView imageView32 = ViewBindings.findChildViewById(rootView, id);
      if (imageView32 == null) {
        break missingId;
      }

      id = R.id.rateUs;
      Button rateUs = ViewBindings.findChildViewById(rootView, id);
      if (rateUs == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView8;
      TextView textView8 = ViewBindings.findChildViewById(rootView, id);
      if (textView8 == null) {
        break missingId;
      }

      id = R.id.textViewnew;
      TextView textViewnew = ViewBindings.findChildViewById(rootView, id);
      if (textViewnew == null) {
        break missingId;
      }

      id = R.id.viewAva;
      Button viewAva = ViewBindings.findChildViewById(rootView, id);
      if (viewAva == null) {
        break missingId;
      }

      return new AvailableDetailsBinding((ConstraintLayout) rootView, adding, imageView10,
          imageView31, imageView32, rateUs, textView14, textView8, textViewnew, viewAva);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
