// Generated by view binder compiler. Do not edit!
package com.example.kelineyt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.simplepass.loadingbutton.customViews.CircularProgressButton;
import com.example.kelineyt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHealthtipsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CircularProgressButton AddTips;

  @NonNull
  public final TextView addTips;

  @NonNull
  public final EditText doctorName;

  @NonNull
  public final EditText healthTips;

  @NonNull
  public final ConstraintLayout healthtipDes;

  @NonNull
  public final ImageView tipsTop;

  @NonNull
  public final TextView tvDontHaveAccount;

  private ActivityHealthtipsBinding(@NonNull ConstraintLayout rootView,
      @NonNull CircularProgressButton AddTips, @NonNull TextView addTips,
      @NonNull EditText doctorName, @NonNull EditText healthTips,
      @NonNull ConstraintLayout healthtipDes, @NonNull ImageView tipsTop,
      @NonNull TextView tvDontHaveAccount) {
    this.rootView = rootView;
    this.AddTips = AddTips;
    this.addTips = addTips;
    this.doctorName = doctorName;
    this.healthTips = healthTips;
    this.healthtipDes = healthtipDes;
    this.tipsTop = tipsTop;
    this.tvDontHaveAccount = tvDontHaveAccount;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHealthtipsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHealthtipsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_healthtips, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHealthtipsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Add_tips;
      CircularProgressButton AddTips = ViewBindings.findChildViewById(rootView, id);
      if (AddTips == null) {
        break missingId;
      }

      id = R.id.add_tips;
      TextView addTips = ViewBindings.findChildViewById(rootView, id);
      if (addTips == null) {
        break missingId;
      }

      id = R.id.doctor_Name;
      EditText doctorName = ViewBindings.findChildViewById(rootView, id);
      if (doctorName == null) {
        break missingId;
      }

      id = R.id.health_tips;
      EditText healthTips = ViewBindings.findChildViewById(rootView, id);
      if (healthTips == null) {
        break missingId;
      }

      ConstraintLayout healthtipDes = (ConstraintLayout) rootView;

      id = R.id.tips_top;
      ImageView tipsTop = ViewBindings.findChildViewById(rootView, id);
      if (tipsTop == null) {
        break missingId;
      }

      id = R.id.tvDontHaveAccount;
      TextView tvDontHaveAccount = ViewBindings.findChildViewById(rootView, id);
      if (tvDontHaveAccount == null) {
        break missingId;
      }

      return new ActivityHealthtipsBinding((ConstraintLayout) rootView, AddTips, addTips,
          doctorName, healthTips, healthtipDes, tipsTop, tvDontHaveAccount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
